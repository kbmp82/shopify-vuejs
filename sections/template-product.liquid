{{ 'product_page.css' | asset_url | stylesheet_tag }}
{% assign selected_variant = product.selected_or_first_available_variant %}
<div id="product-template" class="product-template container">
  <div class="product-wrap">
    <div class="product-img">
      <transition name="fade">
        <img :src="currentVariant.image || fallback_image" :key="currentVariant.image || fallback_image" alt="">
      </transition>
    </div>
    <div class="product-summary">
      {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'vendor' %}
              <div class="vendor">
                {{ product.vendor }}
              </div>
            {% when 'title' %}
              <h1>{{ product.title }}</h1>
            {% when 'price' %}
              <div id="price-{{ section.id }}" class="price">
                <span v-html="currentVariant.price" class="current-price"></span>
                <span v-html="currentVariant.compare_at_price" class="compare"></span>
                {% if selected_variant.price < selected_variant.compare_at_price %}
                  <span class="sale-callout">Sale</span>
                {% endif %}
              </div>
            {% when 'variant_selector' %}
              {% unless product.has_only_default_variant %}
                <div id="variant-select">
                  {% for option in product.options_with_values %}
                    <div class="option-{{ forloop.index }}">
                      <label
                        for="Option-{{ product.id }}-{{ forloop.index }}"
                      >
                        {{- option.name -}}
                      </label>
                      <select
                        name="options[{{ option.name | escape }}]"
                        id="Option-{{ product.id }}-{{ forloop.index }}"
                        v-model="variant_selection[{{ option.position | minus: 1 }}]"
                        data-option="{{ option | json | escape }}"
                        @change="onVariantChange"
                      >
                        {% for value in option.values %}
                          <option
                            value="{{ value | escape }}"
                            {% if option.selected_value == value %}
                              selected="selected"
                            {% endif %}
                          >
                            {{ value }}
                          </option>
                        {% endfor %}
                      </select>
                    </div>
                  {% endfor %}
                </div>
                <div id="product-quantity">
                  <label for="Quantity">Quantity</label>
                  <input id="quantity" type="number" min="1" v-model="quantity" name="quantity">
                </div>
              {% endunless %}
              {% comment %} {% render 'product_form' %} {% endcomment %}
            {% when 'checkout_buttons' %}
              <input type="hidden" name="id" :value="current_variant_id">
              <button @click.prevent="addToCart(current_variant_id)" class="atc-button">Add to Cart</button>
            {% when 'description' %}
              {{ product.description }}
            {% else %}

          {% endcase %}
        {% endfor %}
      {% endform %}
    </div>
  </div>
</div>
<script>
  
    const ProductTemplate = Vue.createApp({
      delimiters: ['${', '}'],
      data() {
        return {
          quantity: 1,
          current_variant_id: {{ selected_variant.id }},
          product_url: "{{ product.url }}",
            variant_selection: [
            {%- for option in product.options_with_values -%}
            "{{ option.selected_value }}"
            {% unless forloop.last %},{% endunless %}
            {%- endfor -%}
            ],
            variants: [
              {%- for variant in product.variants -%}
                {% assign img_url = variant.image.src | image_url: width: 480, height: 480 %}
                {
                  id: "{{ variant.id }}",
                  available: {{ variant.available }},
                  options: [{% for option in variant.options %}"{{ option }}"{% unless forloop.last %},{% endunless %}{% endfor %}],
                  price: "{{ variant.price | money }}",
                  compare_at_price: "{{ variant.compare_at_price | money }}",
                  image: "{% unless img_url contains 'no-image' %}{{ img_url }}{% endunless %}",
                },
              {%- endfor -%}
            ],
            fallback_image: "{{ product.featured_image | image_url: width: 480, height: 480 }}",
        };
      },
      computed: {
        currentVariant(){
          let currentVariant = this.variants.find(variant => {
            return variant.id == this.current_variant_id
            });
            
           return currentVariant;
        }
        
      },
      methods: {
        onVariantChange(){
          let current_variant = this.variants.find(variant =>{
            return variant.options.toString() == this.variant_selection.toString()
       });
       this.current_variant_id = current_variant.id;
       //this.current_variant_price = current_variant.price;
      // this.current_variant_compare_price = current_variant.compare_at_price;
       window.history.replaceState({}, '', `${this.product_url}?variant=${current_variant.id}`);
        },
        addToCart(variant){
          let data = {
            id: variant,
            quantity: this.quantity,
          };
         
            store.dispatch('addItemToCart', data)
            .then(()=>{
              setTimeout(()=>{
                store.dispatch('openMiniCart');
              }, 1000)
              })
        }
      },

    }).mount('#product-template');

</script>

{% schema %}
{
  "name": "Product",
  "blocks": [
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "variant_selector",
      "name": "Variant Selector",
      "limit": 1
    },
    {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "checkout_buttons",
      "name": "Checkout Buttons",
      "limit": 1
    }
  ]
}
{% endschema %}
