{{ 'cart_page.css' | asset_url | stylesheet_tag }}

<div id="cart-template">
  <div class="container">
    <h1>Your cart</h1>
    <transition name="fade">
      <div v-show="!loading">
        <template v-if="cart.items.length > 0">
          <form action="{{ routes.cart_url }}" method="post" novalidate>
            <div class="cart-table">
              <div class="cart-headings">
                <span>Product</span>
                <span>Price</span>
                <span>Quantity</span>
                <span>Total</span>
              </div>

              <div class="cart-row" v-for="(item, index) in cart.items">
                <div class="product">
                  <img :src="item.featured_image.url" :alt="item.featured_image.alt">
                  <div class="title">
                    <h3>${ item.title }</h3>
                    <div class="remove-item" @click="removeCartItem(index)">
                      {% render 'icon_trash' %}
                    </div>
                  </div>
                </div>
                <div class="price">${ formatPrice(item.price) }</div>
                <div class="quantity">
                  <input
                    class="quantity"
                    name="updates[]"
                    type="number"
                    min="0"
                    v-model="cart.items[index].quantity"
                    @change="updateCartItem(index)"
                  >
                </div>
                <div class="total-price">${ formatPrice(item.final_line_price) }</div>
              </div>
              <div class="cart-footer">
                <div class="subtotal-section">
                  <div class="notes">
                    <label for="cart_notes" class="my-1">Cart notes</label>
                    <textarea
                      name="note"
                      id="cart_notes"
                      cols="30"
                      rows="5"
                    ></textarea>
                  </div>
                  <div class="checkout-section">
                    <div class="cart-subtotal"><span>Subtotal: </span>${ formatPrice(cart.total_price)}</div>
                    <button
                      type="submit"
                      name="checkout"
                      class="checkout-button"
                    >
                      Checkout
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </form>
        </template>
        <template v-else>
          <h1>Your cart is empty</h1>
          <a class="continue-shopping" href="{{ routes.all_products_collection_url }}">Continue shopping</a>
        </template>
      </div>
    </transition>
  </div>
</div>
{% style %}
  #cart-template .checkout-button,
  #cart-template .continue-shopping {
     background-color: {{ section.settings.checkout_bg_clr }};
     color: {{ section.settings.checkout_fnt_clr }};
   }

   #cart-template .checkout-button:hover,
   #cart-template .continue-shopping:hover {
     background-color: {{ section.settings.checkout_bg_clr_h }};
     color: {{ section.settings.checkout_fnt_clr_h }};
   }
{% endstyle %}
<script>
  const CartTemplate = Vue.createApp({
    delimiters: ['${', '}'],
    data() {
      return {
        loading: true,
        cart: {
          items: [],
        },
      };
    },
    created() {
      this.getCart();
    },
    methods: {
      getCart(data) {
        fetch('/cart.js', {
          method: 'GET',
          headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json',
          },
        })
          .then((response) => response.json())
          .then((json) => {
            this.cart = json;
            this.loading = false;
          });
      },
      formatPrice(price) {
        return `$${(price / 100).toFixed(2)}`;
      },
      updateCartItem(index) {
        const id = this.cart.items[index].variant_id;
        const qty = parseInt(this.cart.items[index].quantity);

        let data = {
          updates: {
            [id]: qty,
          },
        };

        fetch('/cart/update.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        }).then(() => this.getCart());
      },
      removeCartItem(index) {
        const id = this.cart.items[index].variant_id;

        let data = {
          updates: {
            [id]: 0,
          },
        };

        fetch('/cart/update.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        }).then(() => this.getCart());
      },
    },
  }).mount('#cart-template');
</script>

{% schema %}
{
  "name": "Template Cart",
  "settings": [
    {
      "type": "color",
      "id": "checkout_bg_clr",
      "label": "Checkout button color",
      "default": "#000"
    },
    {
      "type": "color",
      "id": "checkout_fnt_clr",
      "label": "Checkout button font color",
      "default": "#fff"
    },
    {
      "type": "paragraph",
      "content": "Hover"
    },
    {
      "type": "color",
      "id": "checkout_bg_clr_h",
      "label": "Checkout button color",
      "default": "#000"
    },
    {
      "type": "color",
      "id": "checkout_fnt_clr_h",
      "label": "Checkout button font color",
      "default": "#fff"
    }
  ]
}
{% endschema %}
